}
for (i in tab[1, ]) {
print((i*sum(tab[,1:3]) / sum(tab)))
}
for (i in sum(tab[1, ])) {
print((i*sum(tab[,1:3]) / sum(tab)))
}
print((i*sum(tab[,1:3]) / sum(tab)))
for (i in sum(tab[1,1:3])) {
print((i*sum(tab[,1:3]) / sum(tab)))
}
print((i*sum(tab[,1:3]) / sum(tab)))
for (i in tab[1,])) {
for (i in tab[1,]) {
print((sum(i)*sum(tab[,1:3]) / sum(tab)))
}
for (i in tab[1,]) {
print(((sum(i)*sum(tab[,1:3]))/sum(tab)))
}
tab <- matrix(c(14, 6, 7, 7, 7, 1), byrow = TRUE, nrow = 2, ncol = 3)
tab
expected_frequencies <- function(sum(tab[1,])) {
tab <- matrix(c(14, 6, 7, 7, 7, 1), byrow = TRUE, nrow = 2, ncol = 3)
tab
expected_frequencies <- function(sum(tab[1,]) {
tab
expected_frequencies <- function(sum(tab[1,]) {
}
# Loop that makes i = 1, then i = 2, then i = 3
for (i in 1:3){
expDat[i,1] <- (sum(tab[i,]) * sum(tab[,1])) / sum(tab)
expDat[i,2] <- (sum(tab[i,]) * sum(tab[,2])) / sum(tab)
expDat[i,3] <- (sum(tab[i,]) * sum(tab[,3])) / sum(tab)
}
expDat <- data.frame()
# Loop that makes i = 1, then i = 2, then i = 3
for (i in 1:3){
expDat[i,1] <- (sum(tab[i,]) * sum(tab[,1])) / sum(tab)
expDat[i,2] <- (sum(tab[i,]) * sum(tab[,2])) / sum(tab)
expDat[i,3] <- (sum(tab[i,]) * sum(tab[,3])) / sum(tab)
}
for (i in 1:3){
expDat[i,1] <- (sum(tab[i,]) * sum(tab[,1])) / sum(tab)
expDat[i,2] <- (sum(tab[i,]) * sum(tab[,2])) / sum(tab)
expDat[i,3] <- (sum(tab[i,]) * sum(tab[,3])) / sum(tab)
}
tab <- matrix(c(14, 6, 7, 7, 7, 1), byrow = TRUE, nrow = 2, ncol = 3)
tab
expDat <- data.frame()
# Loop that makes i = 1, then i = 2, then i = 3
for (i in 1:2){
expDat[i,1] <- (sum(tab[i,]) * sum(tab[,1])) / sum(tab)
expDat[i,2] <- (sum(tab[i,]) * sum(tab[,2])) / sum(tab)
expDat[i,3] <- (sum(tab[i,]) * sum(tab[,3])) / sum(tab)
}
# Print expected values
expDat
rownames = c("Upper Class", "Lower Class")
colnames = c("Not Stopped", "Bribe requested", "Stopped/given warning")
expected_frequencies <- c(expDat,  byrow = TRUE, nrow = 2, ncol = 3, dimnames = list(rownames, colnames))
expected_frequencies
rownames = c("Upper Class", "Lower Class")
colnames = c("Not Stopped", "Bribe requested", "Stopped/given warning")
expected_frequencies <- c(expDat, dimnames = list(rownames, colnames))
expected_frequencies
expected_frequencies <- matric(c(expDat, dimnames = list(rownames, colnames)))
rownames = c("Upper Class", "Lower Class")
colnames = c("Not Stopped", "Bribe requested", "Stopped/given warning")
expected_frequencies <- matrix(c(expDat, dimnames = list(rownames, colnames)))
expected_frequencies
expected_frequencies <- matrix(c(expDat), byrow = TRUE, nrow = 2, ncol = 3, dimnames = list(rownames, colnames))
expected_frequencies
expected_frequencies <- matrix(c(unlist(expDat)), byrow = TRUE, nrow = 2, ncol = 3, dimnames = list(rownames, colnames))
expected_frequencies
expected_frequencies <- matrix(c(unlist(expDat)), dimnames = list(rownames, colnames))
expected_frequencies <- matrix(c(unlist(expDat)), byrow= TRUE, dimnames = list(rownames, colnames))
expected_frequencies <- matrix(c(unlist(expDat)), byrow = TRUE, nrow = 2, ncol = 3, dimnames = list(rownames, colnames))
expected_frequencies
expected_frequencies <- matrix(c(unlist(expDat)), bycolumn = TRUE, nrow = 2, ncol = 3, dimnames = list(rownames, colnames))
# Print expected values
expDat
# Print expected values
expDat(dimnames = list(rownames, colnames))
# Print expected values
tab <- (expDat, dimnames = list(rownames, colnames))
tab <- (expDat, dimnames = list(rownames, colnames))
tab <- ("expDat", dimnames = list(rownames, colnames))
tab <- (data=expDat, dimnames = list(rownames, colnames))
tab <- (data=expDat dimnames = list(rownames, colnames))
names(expDat)[1:2] <- rownames
names(expDat)[1:2,] <- rownames
expDat
names(expDat)[1:2,] <- rownames
names(expDat)[1:2] <- rownames
expDat
names(expDat)[1:3] <- colnames
expDat
names(expDat)[1:2] <- rownames
expDat
rownames(expDat)[1:2] <- rownames
expDat
names(expDat)[1:3] <- colnames
rownames(expDat)[1:2] <- rownames
expDat
tab <- matrix(c(14, 6, 7, 7, 7, 1), byrow = TRUE, nrow = 2, ncol = 3)
tab
expected_frequencies <- data.frame()
for (i in 1:2){
expected_frequencies[i,1] <- (sum(tab[i,]) * sum(tab[,1])) / sum(tab)
expected_frequencies[i,2] <- (sum(tab[i,]) * sum(tab[,2])) / sum(tab)
expected_frequencies[i,3] <- (sum(tab[i,]) * sum(tab[,3])) / sum(tab)
}
expected_frequencies
rownames = c("Upper Class", "Lower Class")
colnames = c("Not Stopped", "Bribe requested", "Stopped/given warning")
names(expected_frequencies)[1:3] <- colnames
rownames(expected_frequencies)[1:2] <- rownames
expected_frequencies
tab <- matrix(c(14, 6, 7, 7, 7, 1), byrow = TRUE, nrow = 2, ncol = 3)
tab
expected_frequencies <- data.frame()
for (i in 1:2){
expected_frequencies[i,1] <- (sum(tab[i,]) * sum(tab[,1])) / sum(tab)
expected_frequencies[i,2] <- (sum(tab[i,]) * sum(tab[,2])) / sum(tab)
expected_frequencies[i,3] <- (sum(tab[i,]) * sum(tab[,3])) / sum(tab)
}
expected_frequencies
rownames = c("Upper Class", "Lower Class")
colnames = c("Not Stopped", "Bribe requested", "Stopped/given warning")
names(expected_frequencies)[1:3] <- colnames
rownames(expected_frequencies)[1:2] <- rownames
expected_frequencies
#Step 2: finding test statistic
test_statistic <- ((tab - expected_frequencies)^2/expected_frequencies)
test_statistic
test_statistic <- sum(((tab - expected_frequencies)^2/expected_frequencies))
test_statistic
df <- ((nrow(tab) -1)*(ncol(tab) -1))
alpha <- 0.1
pvalue <- pt(test_statistic, 2, lower.tail = TRUE)
pvalue
pvalue < alpha
standarised_residuals <- data.frame()
for (i in 1:2){
standardised_residuals[i,1] <- (tab[i,] - tab2[,1])/sqrt(tab2[i, 1])
standardised_residuals[i,2] <- (tab[i,] - tab2[,2])/sqrt(tab2[i, 2])
standardised_residuals[i,3] <- (tab[i,] - tab2[,3])/sqrt(tab2[i, 3])
}
for (i in 1:2){
standardised_residuals[i,1] <- (tab[i,] - expected_frequencies[,1])/sqrt(expected_frequencies[i, 1])
standardised_residuals[i,2] <- (tab[i,] - expected_frequencies[,2])/sqrt(expected_frequencies[i, 2])
standardised_residuals[i,3] <- (tab[i,] - expected_frequencies[,3])/sqrt(expected_frequencies[i, 3])
}
standarised_residuals <- data.frame()
for (i in 1:2){
standardised_residuals[i,1] <- (tab[i,] - expected_frequencies[,1])/sqrt(expected_frequencies[i, 1])
standardised_residuals[i,2] <- (tab[i,] - expected_frequencies[,2])/sqrt(expected_frequencies[i, 2])
standardised_residuals[i,3] <- (tab[i,] - expected_frequencies[,3])/sqrt(expected_frequencies[i, 3])
}
for (i in 1:2){
standardised_residuals[i,1] <- (tab[i,] - expected_frequencies[,1])/sqrt(expected_frequencies)
standardised_residuals[i,2] <- (tab[i,] - expected_frequencies[,2])/sqrt(expected_frequencies)
standardised_residuals[i,3] <- (tab[i,] - expected_frequencies[,3])/sqrt(expected_frequencies)
}
tab <- matrix(c(14, 6, 7, 7, 7, 1), byrow = TRUE, nrow = 2, ncol = 3)
tab
for (i in 1:2){
standardised_residuals[i,1] <- (tab[i,] - expected_frequencies[,1])/sqrt(expected_frequencies[,1])
standardised_residuals[i,2] <- (tab[i,] - expected_frequencies[,2])/sqrt(expected_frequencies[,2])
standardised_residuals[i,3] <- (tab[i,] - expected_frequencies[,3])/sqrt(expected_frequencies[,3])
}
for (i in 1:3){
standardised_residuals[1, i] <- (tab[,i] - expected_frequencies[1,])/sqrt(expected_frequencies[1,])
standardised_residuals[2, i] <- (tab[,i] - expected_frequencies[2,])/sqrt(expected_frequencies[2,])
standardised_residuals[3, i] <- (tab[,i] - expected_frequencies[3,])/sqrt(expected_frequencies[3,])
}
standarised_residuals <- data.frame()
for (i in 1:3){
standardised_residuals[1, i] <- (tab[,i] - expected_frequencies[1,])/sqrt(expected_frequencies[1,])
standardised_residuals[2, i] <- (tab[,i] - expected_frequencies[2,])/sqrt(expected_frequencies[2,])
standardised_residuals[3, i] <- (tab[,i] - expected_frequencies[3,])/sqrt(expected_frequencies[3,])
}
tab <- matrix(c(14, 6, 7, 7, 7, 1), byrow = TRUE, nrow = 2, ncol = 3)
tab
standarised_residuals <- data.frame()
for (i in 1:3){
standardised_residuals[1, i] <- (tab[,i] - expected_frequencies[1,])/sqrt(expected_frequencies[1,])
standardised_residuals[2, i] <- (tab[,i] - expected_frequencies[2,])/sqrt(expected_frequencies[2,])
standardised_residuals[3, i] <- (tab[,i] - expected_frequencies[3,])/sqrt(expected_frequencies[3,])
}
standarised_residuals <- data.frame()
tab <- matrix(c(14, 6, 7, 7, 7, 1), byrow = TRUE, nrow = 2, ncol = 3)
tab
standardised_residuals <- data.frame()
for (i in 1:3){
standardised_residuals[1, i] <- (tab[,i] - expected_frequencies[1,])/sqrt(expected_frequencies[1,])
standardised_residuals[2, i] <- (tab[,i] - expected_frequencies[2,])/sqrt(expected_frequencies[2,])
standardised_residuals[3, i] <- (tab[,i] - expected_frequencies[3,])/sqrt(expected_frequencies[3,])
}
standarised_residuals
for (i in 1:3){
standardised_residuals[1, i] <- (tab[,i] - expected_frequencies[1,])/sqrt(expected_frequencies[1,])
standardised_residuals[2, i] <- (tab[,i] - expected_frequencies[2,])/sqrt(expected_frequencies[2,])
}
standarised_residuals
View(standardised_residuals)
standarised_residuals
tab <- matrix(c(14, 6, 7, 7, 7, 1), byrow = TRUE, nrow = 2, ncol = 3)
tab
residuals <- data.frame()
for (i in 1:2){
residuals[i,1] <- (tab[,1] - expected_frequencies[,1])/sqrt(expected_frequencies[,1])
residuals[i,2] <- (tab[,2] - expected_frequencies[,2])/sqrt(expected_frequencies[,2])
residuals[i,3] <- (tab[,3] - expected_frequencies[,3])/sqrt(expected_frequencies[,3])
}
tab
tab <- matrix(c(14, 6, 7, 7, 7, 1), byrow = TRUE, nrow = 2, ncol = 3)
tab
residuals <- data.frame()
for (i in 1:2){
residuals[i,1] <- (tab[,1] - expected_frequencies[,1])/sqrt(expected_frequencies[,1])
residuals[i,2] <- (tab[,2] - expected_frequencies[,2])/sqrt(expected_frequencies[,2])
residuals[i,3] <- (tab[,3] - expected_frequencies[,3])/sqrt(expected_frequencies[,3])
}
View(expected_frequencies)
View(tab)
tab <- matrix(c(14, 6, 7, 7, 7, 1), byrow = TRUE, nrow = 2, ncol = 3)
tab
expected_frequencies <- data.frame()
for (i in 1:2){
expected_frequencies[i,1] <- (sum(tab[i,]) * sum(tab[,1])) / sum(tab)
expected_frequencies[i,2] <- (sum(tab[i,]) * sum(tab[,2])) / sum(tab)
expected_frequencies[i,3] <- (sum(tab[i,]) * sum(tab[,3])) / sum(tab)
}
expected_frequencies
residuals <- data.frame()
for (i in 1:2){
residuals[i,1] <- (tab[,1] - expected_frequencies[,1])/sqrt(expected_frequencies[,1])
residuals[i,2] <- (tab[,2] - expected_frequencies[,2])/sqrt(expected_frequencies[,2])
residuals[i,3] <- (tab[,3] - expected_frequencies[,3])/sqrt(expected_frequencies[,3])
}
View(expected_frequencies)
exfreq <- matrix(c(13.5, 8.357143, 5.142857, 7.5, 4.642857, 2.857143), byrow = TRUE, nrow = 2, ncol = 3)
exfreq
tab <- matrix(c(14, 6, 7, 7, 7, 1), byrow = TRUE, nrow = 2, ncol = 3)
tab
exfreq <- matrix(c(13.5, 8.357143, 5.142857, 7.5, 4.642857, 2.857143), byrow = TRUE, nrow = 2, ncol = 3)
exfreq
residuals <- data.frame()
for (i in 1:2){
residuals[i,1] <- (tab[,1] - exfreq[,1])/sqrt(exfreq[,1])
residuals[i,2] <- (tab[,2] - exfreq[,2])/sqrt(exfreq[,2])
residuals[i,3] <- (tab[,3] - exfreq[,3])/sqrt(exfreq[,3])
}
set.seed(20221)
tab <- matrix(c(14, 6, 7, 7, 7, 1), byrow = TRUE, nrow = 2, ncol = 3)
tab
exfreq <- matrix(c(13.5, 8.357143, 5.142857, 7.5, 4.642857, 2.857143), byrow = TRUE, nrow = 2, ncol = 3)
exfreq
residuals <- data.frame()
for (i in 1:2){
residuals[i,1] <- (tab[,1] - exfreq[,1])/sqrt(exfreq[,1])
residuals[i,2] <- (tab[,2] - exfreq[,2])/sqrt(exfreq[,2])
residuals[i,3] <- (tab[,3] - exfreq[,3])/sqrt(exfreq[,3])
}
residuals <- data.frame()
set.seed(20221)
for (i in 1:2){
residuals[i,1] <- (tab[,1] - exfreq[,1])/sqrt(exfreq[,1])
residuals[i,2] <- (tab[,2] - exfreq[,2])/sqrt(exfreq[,2])
residuals[i,3] <- (tab[,3] - exfreq[,3])/sqrt(exfreq[,3])
}
residuals <- data.frame(1:2)
for (i in 1:2){
residuals[i,1] <- (tab[,1] - exfreq[,1])/sqrt(exfreq[,1])
residuals[i,2] <- (tab[,2] - exfreq[,2])/sqrt(exfreq[,2])
residuals[i,3] <- (tab[,3] - exfreq[,3])/sqrt(exfreq[,3])
}
View(exfreq)
sr1 <- (tab[1,1] - tab2[1,1])/sqrt(tab2[1,1])
residuals <- data.frame(1:2)
for (i in 1:2){
residuals[i,1] <- (tab[i,1] - exfreq[i,1])/sqrt(exfreq[i,1])
residuals[i,2] <- (tab[i,2] - exfreq[i,2])/sqrt(exfreq[i,2])
residuals[i,3] <- (tab[i,3] - exfreq[i,3])/sqrt(exfreq[i,3])
}
residuals
residuals <- data.frame()
for (i in 1:2){
residuals[i,1] <- (tab[i,1] - exfreq[i,1])/sqrt(exfreq[i,1])
residuals[i,2] <- (tab[i,2] - exfreq[i,2])/sqrt(exfreq[i,2])
residuals[i,3] <- (tab[i,3] - exfreq[i,3])/sqrt(exfreq[i,3])
}
residuals
standardised_residuals <- data.frame()
for (i in 1:2){
standardised_residuals[i,1] <- (tab[i,1] - expected_frequencies[i,1])/sqrt(expected_frequencies[i,1])
standardised_residuals[i,2] <- (tab[i,2] - expected_frequencies[i,2])/sqrt(expected_frequencies[i,2])
standardised_residuals[i,3] <- (tab[i,3] - expected_frequencies[i,3])/sqrt(expected_frequencies[i,3])
}
tab <- matrix(c(14, 6, 7, 7, 7, 1), byrow = TRUE, nrow = 2, ncol = 3)
tab
#Step 1: finding expected frequencies
expected_frequencies <- data.frame()
for (i in 1:2){
expected_frequencies[i,1] <- (sum(tab[i,]) * sum(tab[,1])) / sum(tab)
expected_frequencies[i,2] <- (sum(tab[i,]) * sum(tab[,2])) / sum(tab)
expected_frequencies[i,3] <- (sum(tab[i,]) * sum(tab[,3])) / sum(tab)
}
expected_frequencies
rownames = c("Upper Class", "Lower Class")
colnames = c("Not Stopped", "Bribe requested", "Stopped/given warning")
names(expected_frequencies)[1:3] <- colnames
rownames(expected_frequencies)[1:2] <- rownames
expected_frequencies
#Step 2: finding test statistic
test_statistic <- sum(((tab - expected_frequencies)^2/expected_frequencies))
test_statistic
df <- ((nrow(tab) -1)*(ncol(tab) -1))
alpha <- 0.1
pvalue <- pt(test_statistic, 2, lower.tail = TRUE)
pvalue
pvalue < alpha
#fail to reject null hypothesis because value is not less than 0.1.this suggests
#that we do not have enough evidence to claim that the...
#calculate standardized residual for each score and put in table below.
standardised_residuals <- data.frame()
for (i in 1:2){
standardised_residuals[i,1] <- (tab[i,1] - expected_frequencies[i,1])/sqrt(expected_frequencies[i,1])
standardised_residuals[i,2] <- (tab[i,2] - expected_frequencies[i,2])/sqrt(expected_frequencies[i,2])
standardised_residuals[i,3] <- (tab[i,3] - expected_frequencies[i,3])/sqrt(expected_frequencies[i,3])
}
standardised_residuals
rownames = c("Upper Class", "Lower Class")
colnames = c("Not Stopped", "Bribe requested", "Stopped/given warning")
names(standardised_residuals)[1:3] <- colnames
rownames(standardised_residuals)[1:2] <- rownames
standardised_residuals
data <- read.csv("https://raw.githubusercontent.com/kosukeimai/qss/master/PREDICTION/women.csv")
plot(data$water~jitter(data$reserved))
reg <- lm(data$water~data$reserved, data)
reg
summary(reg)
pvalue <- pt(test_statistic, 2, lower.tail = FALSE)
pvalue
pchisq(test_statistic, df = 2, lower.tail=FALSE)
df <- ((nrow(tab) -1)*(ncol(tab) -1))
alpha <- 0.1
p-value <- pchisq(test_statistic, df = 2, lower.tail=FALSE)
df <- ((nrow(tab) -1)*(ncol(tab) -1))
alpha <- 0.1
pvalue <- pchisq(test_statistic, df = 2, lower.tail=FALSE)
pvalue
pvalue < alpha
plot(data$water~jitter(data$reserved))
plot(data$water~data$reserved)
plot(reservation$yes, water,
pch = 20,
cex = 0.5,
col = "Steelblue",
xlab = “reservation policy”,
reservation$yes <- reservation == 1
reservation$yes <- data$reservation == 1
reservation_yes <- data$reservation == 1
reservation_yes <- c(data$reservation == 1)
reservation_yes <- matrix(c(data$reservation == 1))
View(reservation_yes)
data$D <- matrix(c(data$reservation == 1))
View(data)
data$D <- data$reservation == 1
data$D <- data$reservation > 0
data$D <- data$reservation < 0
data$D <- data$reservation < 1
data$D <- data$reservation < 0
data$D <- data$reservation > 0
data$D <- data$reservation["1"]
View(data)
View(data)
data$D <- data$reserved == 1
View(data)
plot(data$D, water,
pch = 20,
cex = 0.5,
col = "Steelblue",
xlab = "reservation policy",
ylab = "Water facilities",
main = "Dummy Regression")
plot(data$D, data$water,
pch = 20,
cex = 0.5,
col = "Steelblue",
xlab = "reservation policy",
ylab = "Water facilities",
main = "Dummy Regression")
plot(data$D, data$water,
pch = 20,
cex = 0.5,
col = "Steelblue",
xlab = "Reservation policy",
ylab = "Water facilities",
main = "Dummy Regression")
dummy_model <- lm(water ~ D, data = data)
summary(dummy_model)
plot(data$water~data$reserved)
plot(data$water~jitter(data$reserved))
reg <- lm(data$water~data$reserved, data)
reg
summary(reg)
points(x = data$D,
y = predict(dummy_model),
col = "red",
pch = 20)
cofint(dummy_model)
confint(dummy_model)
set.seed(20221)
tab <- matrix(c(14, 6, 7, 7, 7, 1), byrow = TRUE, nrow = 2, ncol = 3)
tab
tab <- matrix(c(14, 6, 7, 7, 7, 1), byrow = TRUE, nrow = 2, ncol = 3)
tab
#Step 1: finding expected frequencies
expected_frequencies <- data.frame()
for (i in 1:2){
expected_frequencies[i,1] <- (sum(tab[i,]) * sum(tab[,1])) / sum(tab)
expected_frequencies[i,2] <- (sum(tab[i,]) * sum(tab[,2])) / sum(tab)
expected_frequencies[i,3] <- (sum(tab[i,]) * sum(tab[,3])) / sum(tab)
}
expected_frequencies
rownames = c("Upper Class", "Lower Class")
colnames = c("Not Stopped", "Bribe requested", "Stopped/given warning")
names(expected_frequencies)[1:3] <- colnames
rownames(expected_frequencies)[1:2] <- rownames
expected_frequencies
tab <- matrix(c(14, 6, 7, 7, 7, 1), byrow = TRUE, nrow = 2, ncol = 3)
tab
expected_frequencies
sr1 <- 14 - 13.5 / sqrt(13.5(1-(sum(tab[1,]/sum(tab))(sum(tab[,1]/sum(tab)))))
sr1
sr1 <- 14 - 13.5 / sqrt(13.5(1-(sum(tab[1,]/sum(tab))(sum(tab[,1]/sum(tab)))))
sr1
sre1 <- 14 - 13.5 / sqrt(13.5(1-(sum(tab[1,]/sum(tab))(sum(tab[,1]/sum(tab)))))
sre1
sre1 <- (14 - 13.5) / sqrt(13.5(1-(sum(tab[1,]/sum(tab))(sum(tab[,1]/sum(tab))
sre1
sqrt(expected_frequencies[1,1]*(1-sum(tab[1,])/sum(tab)*(1-sum(tab[,1])/sum(tab)))
he <- sqrt(expected_frequencies[1,1]*(1-sum(tab[1,])/sum(tab)*(1-sum(tab[,1])/sum(tab)))
he <- sqrt(expected_frequencies[1,1]*(1-sum(tab[1,])/sum(tab))*(1-sum(tab[,1])/sum(tab)))
he
tab
expected_frequencies
he <- (14 - 13.5) / sqrt(expected_frequencies[1,1]*(1-sum(tab[1,])/sum(tab))*(1-sum(tab[,1])/sum(tab)))
he
stand_residuak <- data.frame()
stand_residual <- data.frame()
for (i in 1:2){
stand_residual[i,1] <- (tab[i,1] - expected_frequencies[i, 1] / sqrt(expected_frequences[i,1]*(1-sum(tab[i,])/sum(tab))*(1-sum(tab[,1])/sum(tab)))
}
for (i in 1:2){
stand_residual[i,1] <- (tab[i,1] - expected_frequencies[i, 1] / sqrt(expected_frequences[i,1]*(1-sum(tab[i,])/sum(tab))*(1-sum(tab[,1])/sum(tab))
}
for (i in 1:2){
stand_residual[i,1] <- (tab[i,1] - expected_frequencies[i, 1] / sqrt(expected_frequences[i,1]*(1-sum(tab[i,])/sum(tab))*(1-sum(tab[,1])/sum(tab))
stand_residual[i,2] <- (tab[i,2] - expected_frequencies[i, 2] / sqrt(expected_frequences[i,2]*(1-sum(tab[i,])/sum(tab))*(1-sum(tab[,2])/sum(tab))
for (i in 1:2){
stand_residual[i,1] <- (tab[i,1] - expected_frequencies[i, 1] / sqrt(expected_frequences[i,1]*(1-sum(tab[i,])/sum(tab))*(1-sum(tab[,1])/sum(tab)))
stand_residual[i,2] <- (tab[i,2] - expected_frequencies[i, 2] / sqrt(expected_frequences[i,2]*(1-sum(tab[i,])/sum(tab))*(1-sum(tab[,2])/sum(tab)))
for (i in 1:2){
stand_residual[i,1] <- (tab[i,1] - expected_frequencies[i, 1] / / sqrt(expected_frequencies[i,1]*(1-sum(tab[i,])/sum(tab))*(1-sum(tab[,1])/sum(tab)))
for (i in 1:2){
stand_residual[i,1] <- (tab[i,1] - expected_frequencies[i, 1]/sqrt(expected_frequencies[i,1]*(1-sum(tab[i,])/sum(tab))*(1-sum(tab[,1])/sum(tab)))
stand_residual[i,2] <- (tab[i,2] - expected_frequencies[i, 2]/sqrt(expected_frequencies[i,2]*(1-sum(tab[i,])/sum(tab))*(1-sum(tab[,2])/sum(tab)))
for (i in 1:2){
stand_residual[i,1] <- (tab[i,1] - expected_frequencies[i, 1])/sqrt(expected_frequencies[i,1]*(1-sum(tab[i,])/sum(tab))*(1-sum(tab[,1])/sum(tab)))
stand_residual[i,2] <- (tab[i,2] - expected_frequencies[i, 2])/sqrt(expected_frequencies[i,2]*(1-sum(tab[i,])/sum(tab))*(1-sum(tab[,2])/sum(tab)))
stand_residual[i,3] <- (tab[i,3] - expected_frequencies[i, 3])/sqrt(expected_frequencies[i,1]*(1-sum(tab[i,])/sum(tab))*(1-sum(tab[,3])/sum(tab)))
}
stand_residual
for (i in 1:2){
stand_residual[i,1] <- (tab[i,1] - expected_frequencies[i, 1])/sqrt(expected_frequencies[i,1]*(1-sum(tab[i,])/sum(tab))*(1-sum(tab[,1])/sum(tab)))
stand_residual[i,2] <- (tab[i,2] - expected_frequencies[i, 2])/sqrt(expected_frequencies[i,2]*(1-sum(tab[i,])/sum(tab))*(1-sum(tab[,2])/sum(tab)))
stand_residual[i,3] <- (tab[i,3] - expected_frequencies[i, 3])/sqrt(expected_frequencies[i,3]*(1-sum(tab[i,])/sum(tab))*(1-sum(tab[,3])/sum(tab)))
}
stand_residual
rownames = c("Upper Class", "Lower Class")
colnames = c("Not Stopped", "Bribe requested", "Stopped/given warning")
names(stand_residual)[1:3] <- colnames
rownames(stand_residuak)[1:2] <- rownames
rownames = c("Upper Class", "Lower Class")
colnames = c("Not Stopped", "Bribe requested", "Stopped/given warning")
names(stand_residual)[1:3] <- colnames
rownames(stand_residual)[1:2] <- rownames
stand_residual
stand_residual <- data.frame()
for (i in 1:2){
stand_residual[i,1] <- (tab[i,1] - expected_frequencies[i, 1])/sqrt(expected_frequencies[i,1]*(1-sum(tab[i,])/sum(tab))*(1-sum(tab[,1])/sum(tab)))
stand_residual[i,2] <- (tab[i,2] - expected_frequencies[i, 2])/sqrt(expected_frequencies[i,2]*(1-sum(tab[i,])/sum(tab))*(1-sum(tab[,2])/sum(tab)))
stand_residual[i,3] <- (tab[i,3] - expected_frequencies[i, 3])/sqrt(expected_frequencies[i,3]*(1-sum(tab[i,])/sum(tab))*(1-sum(tab[,3])/sum(tab)))
}
stand_residual
rownames = c("Upper Class", "Lower Class")
colnames = c("Not Stopped", "Bribe requested", "Stopped/given warning")
names(stand_residual)[1:3] <- colnames
rownames(stand_residual)[1:2] <- rownames
stand_residual
for (i in 1:2){
stand_residual[i,1] <- (tab[i,1] - expected_frequencies[i, 1])/
sqrt(expected_frequencies[i,1]*(1-sum(tab[i,])/sum(tab))*(1-sum(tab[,1])/sum(tab)))
stand_residual[i,2] <- (tab[i,2] - expected_frequencies[i, 2])/
sqrt(expected_frequencies[i,2]*(1-sum(tab[i,])/sum(tab))*(1-sum(tab[,2])/sum(tab)))
stand_residual[i,3] <- (tab[i,3] - expected_frequencies[i, 3])/
sqrt(expected_frequencies[i,3]*(1-sum(tab[i,])/sum(tab))*(1-sum(tab[,3])/sum(tab)))
}
stand_residual
